//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SealSignBSSClientTest.BiometrisSignatureService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
    [System.SerializableAttribute()]
    public partial class SealSignDSSFaultContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.stackTraceField, value) != true)) {
                    this.stackTraceField = value;
                    this.RaisePropertyChanged("stackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureProfile", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    public enum SignatureProfile : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAdESBES = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAdEST = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAdESC = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAdESX = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAdESXL = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAdESA = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLDigSig = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAdESBES = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAdEST = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAdESC = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAdESX = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAdESXL = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XAdESA = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAdESBasic = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAdESBES = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAdESLTV = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PAdESXML = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Office = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricSignatureType", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    public enum BiometricSignatureType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Signature = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricSignatureFlags", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    public enum BiometricSignatureFlags : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VerifyIdentity = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncludeTimestamp = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BiometricImageAsWidgetBackground = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncludeHashWatermark = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncludeAttachments = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcludeDocumentMetadata = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncludeIdWatermark = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncludeAccountWatermark = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLBiometricSignatureDetached = 512,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricSignatureParameters", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    [System.SerializableAttribute()]
    public partial class BiometricSignatureParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricImageParameters[] advancedImageParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricImageParameters imageParametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricImageParameters[] advancedImageParameters {
            get {
                return this.advancedImageParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.advancedImageParametersField, value) != true)) {
                    this.advancedImageParametersField = value;
                    this.RaisePropertyChanged("advancedImageParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentPassword {
            get {
                return this.documentPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.documentPasswordField, value) != true)) {
                    this.documentPasswordField = value;
                    this.RaisePropertyChanged("documentPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricImageParameters imageParameters {
            get {
                return this.imageParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.imageParametersField, value) != true)) {
                    this.imageParametersField = value;
                    this.RaisePropertyChanged("imageParameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricImageParameters", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    [System.SerializableAttribute()]
    public partial class BiometricImageParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string attachmentNameField;
        
        private bool autoSizeField;
        
        private int heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageTokenTextField;
        
        private int offsetXField;
        
        private int offsetYField;
        
        private bool onAllPagesField;
        
        private bool onLastPageField;
        
        private int onPageField;
        
        private int pageOffsetField;
        
        private int rotateField;
        
        private bool signatureVisibleField;
        
        private int widthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attachmentName {
            get {
                return this.attachmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.attachmentNameField, value) != true)) {
                    this.attachmentNameField = value;
                    this.RaisePropertyChanged("attachmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool autoSize {
            get {
                return this.autoSizeField;
            }
            set {
                if ((this.autoSizeField.Equals(value) != true)) {
                    this.autoSizeField = value;
                    this.RaisePropertyChanged("autoSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageTokenText {
            get {
                return this.imageTokenTextField;
            }
            set {
                if ((object.ReferenceEquals(this.imageTokenTextField, value) != true)) {
                    this.imageTokenTextField = value;
                    this.RaisePropertyChanged("imageTokenText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int offsetX {
            get {
                return this.offsetXField;
            }
            set {
                if ((this.offsetXField.Equals(value) != true)) {
                    this.offsetXField = value;
                    this.RaisePropertyChanged("offsetX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int offsetY {
            get {
                return this.offsetYField;
            }
            set {
                if ((this.offsetYField.Equals(value) != true)) {
                    this.offsetYField = value;
                    this.RaisePropertyChanged("offsetY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool onAllPages {
            get {
                return this.onAllPagesField;
            }
            set {
                if ((this.onAllPagesField.Equals(value) != true)) {
                    this.onAllPagesField = value;
                    this.RaisePropertyChanged("onAllPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool onLastPage {
            get {
                return this.onLastPageField;
            }
            set {
                if ((this.onLastPageField.Equals(value) != true)) {
                    this.onLastPageField = value;
                    this.RaisePropertyChanged("onLastPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int onPage {
            get {
                return this.onPageField;
            }
            set {
                if ((this.onPageField.Equals(value) != true)) {
                    this.onPageField = value;
                    this.RaisePropertyChanged("onPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int pageOffset {
            get {
                return this.pageOffsetField;
            }
            set {
                if ((this.pageOffsetField.Equals(value) != true)) {
                    this.pageOffsetField = value;
                    this.RaisePropertyChanged("pageOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int rotate {
            get {
                return this.rotateField;
            }
            set {
                if ((this.rotateField.Equals(value) != true)) {
                    this.rotateField = value;
                    this.RaisePropertyChanged("rotate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool signatureVisible {
            get {
                return this.signatureVisibleField;
            }
            set {
                if ((this.signatureVisibleField.Equals(value) != true)) {
                    this.signatureVisibleField = value;
                    this.RaisePropertyChanged("signatureVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureFlags", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    public enum SignatureFlags : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidateChain = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckRevocationStatus = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAddXPathRemoveSignatureTransform = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdESIncludeSignerRole = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdESExplicitPolicy = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdESXType2 = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMSAdESExplicitPolicy = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CMSAdESXType2 = 256,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDFAdESIncludeTimestamp = 512,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDFAdESIncludeRevocationInfo = 1024,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDFAdESExplicitPolicy = 2048,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncludeLocation = 4096,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdESVersion122 = 8192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdESIncludeKeyValue = 16384,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdESVersion132 = 32768,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDFAdESUseParametersInWidget = 65536,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdESPrettySignature = 131072,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDFAdESHideTimestampInWidget = 262144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XMLAdExcludeCertFromSignedProperties = 524288,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureParameters", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    [System.SerializableAttribute()]
    public partial class SignatureParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string algorithmCaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string algorithmInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string headerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.PDFSignatureParameters pdfParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string policyCMSQualifierURIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string policyDigestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string policyIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string reasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string referenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signerCaptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signerInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signerRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int timestampBackupServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int timestampServerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string algorithmCaption {
            get {
                return this.algorithmCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.algorithmCaptionField, value) != true)) {
                    this.algorithmCaptionField = value;
                    this.RaisePropertyChanged("algorithmCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string algorithmInfo {
            get {
                return this.algorithmInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.algorithmInfoField, value) != true)) {
                    this.algorithmInfoField = value;
                    this.RaisePropertyChanged("algorithmInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentPassword {
            get {
                return this.documentPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.documentPasswordField, value) != true)) {
                    this.documentPasswordField = value;
                    this.RaisePropertyChanged("documentPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string header {
            get {
                return this.headerField;
            }
            set {
                if ((object.ReferenceEquals(this.headerField, value) != true)) {
                    this.headerField = value;
                    this.RaisePropertyChanged("header");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.PDFSignatureParameters pdfParameters {
            get {
                return this.pdfParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.pdfParametersField, value) != true)) {
                    this.pdfParametersField = value;
                    this.RaisePropertyChanged("pdfParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string policyCMSQualifierURI {
            get {
                return this.policyCMSQualifierURIField;
            }
            set {
                if ((object.ReferenceEquals(this.policyCMSQualifierURIField, value) != true)) {
                    this.policyCMSQualifierURIField = value;
                    this.RaisePropertyChanged("policyCMSQualifierURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string policyDigest {
            get {
                return this.policyDigestField;
            }
            set {
                if ((object.ReferenceEquals(this.policyDigestField, value) != true)) {
                    this.policyDigestField = value;
                    this.RaisePropertyChanged("policyDigest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string policyIdentifier {
            get {
                return this.policyIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.policyIdentifierField, value) != true)) {
                    this.policyIdentifierField = value;
                    this.RaisePropertyChanged("policyIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.postalCodeField, value) != true)) {
                    this.postalCodeField = value;
                    this.RaisePropertyChanged("postalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string reason {
            get {
                return this.reasonField;
            }
            set {
                if ((object.ReferenceEquals(this.reasonField, value) != true)) {
                    this.reasonField = value;
                    this.RaisePropertyChanged("reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string reference {
            get {
                return this.referenceField;
            }
            set {
                if ((object.ReferenceEquals(this.referenceField, value) != true)) {
                    this.referenceField = value;
                    this.RaisePropertyChanged("reference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signerCaption {
            get {
                return this.signerCaptionField;
            }
            set {
                if ((object.ReferenceEquals(this.signerCaptionField, value) != true)) {
                    this.signerCaptionField = value;
                    this.RaisePropertyChanged("signerCaption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signerInfo {
            get {
                return this.signerInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.signerInfoField, value) != true)) {
                    this.signerInfoField = value;
                    this.RaisePropertyChanged("signerInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signerRole {
            get {
                return this.signerRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.signerRoleField, value) != true)) {
                    this.signerRoleField = value;
                    this.RaisePropertyChanged("signerRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int timestampBackupServerId {
            get {
                return this.timestampBackupServerIdField;
            }
            set {
                if ((this.timestampBackupServerIdField.Equals(value) != true)) {
                    this.timestampBackupServerIdField = value;
                    this.RaisePropertyChanged("timestampBackupServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int timestampServerId {
            get {
                return this.timestampServerIdField;
            }
            set {
                if ((this.timestampServerIdField.Equals(value) != true)) {
                    this.timestampServerIdField = value;
                    this.RaisePropertyChanged("timestampServerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PDFSignatureParameters", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    [System.SerializableAttribute()]
    public partial class PDFSignatureParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDFPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PDFSignatureBackgroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureBackgroundHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureBackgroundStretchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureBackgroundWidthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDFSignatureFieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureFilterOnlyDocSignaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureVisibleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureWidgetAutoPosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureWidgetAutoSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureWidgetHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureWidgetHideTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PDFSignatureWidgetImageTokenTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureWidgetOffsetXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureWidgetOffsetYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureWidgetOnAllPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PDFSignatureWidgetOnLastPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureWidgetOnPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureWidgetPageOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureWidgetRotateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PDFSignatureWidgetWidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDFPassword {
            get {
                return this.PDFPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFPasswordField, value) != true)) {
                    this.PDFPasswordField = value;
                    this.RaisePropertyChanged("PDFPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PDFSignatureBackground {
            get {
                return this.PDFSignatureBackgroundField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFSignatureBackgroundField, value) != true)) {
                    this.PDFSignatureBackgroundField = value;
                    this.RaisePropertyChanged("PDFSignatureBackground");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureBackgroundHeight {
            get {
                return this.PDFSignatureBackgroundHeightField;
            }
            set {
                if ((this.PDFSignatureBackgroundHeightField.Equals(value) != true)) {
                    this.PDFSignatureBackgroundHeightField = value;
                    this.RaisePropertyChanged("PDFSignatureBackgroundHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureBackgroundStretch {
            get {
                return this.PDFSignatureBackgroundStretchField;
            }
            set {
                if ((this.PDFSignatureBackgroundStretchField.Equals(value) != true)) {
                    this.PDFSignatureBackgroundStretchField = value;
                    this.RaisePropertyChanged("PDFSignatureBackgroundStretch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureBackgroundWidth {
            get {
                return this.PDFSignatureBackgroundWidthField;
            }
            set {
                if ((this.PDFSignatureBackgroundWidthField.Equals(value) != true)) {
                    this.PDFSignatureBackgroundWidthField = value;
                    this.RaisePropertyChanged("PDFSignatureBackgroundWidth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDFSignatureFieldName {
            get {
                return this.PDFSignatureFieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFSignatureFieldNameField, value) != true)) {
                    this.PDFSignatureFieldNameField = value;
                    this.RaisePropertyChanged("PDFSignatureFieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureFilterOnlyDocSignatures {
            get {
                return this.PDFSignatureFilterOnlyDocSignaturesField;
            }
            set {
                if ((this.PDFSignatureFilterOnlyDocSignaturesField.Equals(value) != true)) {
                    this.PDFSignatureFilterOnlyDocSignaturesField = value;
                    this.RaisePropertyChanged("PDFSignatureFilterOnlyDocSignatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureVisible {
            get {
                return this.PDFSignatureVisibleField;
            }
            set {
                if ((this.PDFSignatureVisibleField.Equals(value) != true)) {
                    this.PDFSignatureVisibleField = value;
                    this.RaisePropertyChanged("PDFSignatureVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureWidgetAutoPos {
            get {
                return this.PDFSignatureWidgetAutoPosField;
            }
            set {
                if ((this.PDFSignatureWidgetAutoPosField.Equals(value) != true)) {
                    this.PDFSignatureWidgetAutoPosField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetAutoPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureWidgetAutoSize {
            get {
                return this.PDFSignatureWidgetAutoSizeField;
            }
            set {
                if ((this.PDFSignatureWidgetAutoSizeField.Equals(value) != true)) {
                    this.PDFSignatureWidgetAutoSizeField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetAutoSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureWidgetHeight {
            get {
                return this.PDFSignatureWidgetHeightField;
            }
            set {
                if ((this.PDFSignatureWidgetHeightField.Equals(value) != true)) {
                    this.PDFSignatureWidgetHeightField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureWidgetHideText {
            get {
                return this.PDFSignatureWidgetHideTextField;
            }
            set {
                if ((this.PDFSignatureWidgetHideTextField.Equals(value) != true)) {
                    this.PDFSignatureWidgetHideTextField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetHideText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PDFSignatureWidgetImageTokenText {
            get {
                return this.PDFSignatureWidgetImageTokenTextField;
            }
            set {
                if ((object.ReferenceEquals(this.PDFSignatureWidgetImageTokenTextField, value) != true)) {
                    this.PDFSignatureWidgetImageTokenTextField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetImageTokenText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureWidgetOffsetX {
            get {
                return this.PDFSignatureWidgetOffsetXField;
            }
            set {
                if ((this.PDFSignatureWidgetOffsetXField.Equals(value) != true)) {
                    this.PDFSignatureWidgetOffsetXField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetOffsetX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureWidgetOffsetY {
            get {
                return this.PDFSignatureWidgetOffsetYField;
            }
            set {
                if ((this.PDFSignatureWidgetOffsetYField.Equals(value) != true)) {
                    this.PDFSignatureWidgetOffsetYField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetOffsetY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureWidgetOnAllPages {
            get {
                return this.PDFSignatureWidgetOnAllPagesField;
            }
            set {
                if ((this.PDFSignatureWidgetOnAllPagesField.Equals(value) != true)) {
                    this.PDFSignatureWidgetOnAllPagesField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetOnAllPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PDFSignatureWidgetOnLastPage {
            get {
                return this.PDFSignatureWidgetOnLastPageField;
            }
            set {
                if ((this.PDFSignatureWidgetOnLastPageField.Equals(value) != true)) {
                    this.PDFSignatureWidgetOnLastPageField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetOnLastPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureWidgetOnPage {
            get {
                return this.PDFSignatureWidgetOnPageField;
            }
            set {
                if ((this.PDFSignatureWidgetOnPageField.Equals(value) != true)) {
                    this.PDFSignatureWidgetOnPageField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetOnPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureWidgetPageOffset {
            get {
                return this.PDFSignatureWidgetPageOffsetField;
            }
            set {
                if ((this.PDFSignatureWidgetPageOffsetField.Equals(value) != true)) {
                    this.PDFSignatureWidgetPageOffsetField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetPageOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureWidgetRotate {
            get {
                return this.PDFSignatureWidgetRotateField;
            }
            set {
                if ((this.PDFSignatureWidgetRotateField.Equals(value) != true)) {
                    this.PDFSignatureWidgetRotateField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetRotate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PDFSignatureWidgetWidth {
            get {
                return this.PDFSignatureWidgetWidthField;
            }
            set {
                if ((this.PDFSignatureWidgetWidthField.Equals(value) != true)) {
                    this.PDFSignatureWidgetWidthField = value;
                    this.RaisePropertyChanged("PDFSignatureWidgetWidth");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricSignatureBeginResponseBasic", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
    [System.SerializableAttribute()]
    public partial class BiometricSignatureBeginResponseBasic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] biometricStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid instanceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] biometricState {
            get {
                return this.biometricStateField;
            }
            set {
                if ((object.ReferenceEquals(this.biometricStateField, value) != true)) {
                    this.biometricStateField = value;
                    this.RaisePropertyChanged("biometricState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid instance {
            get {
                return this.instanceField;
            }
            set {
                if ((this.instanceField.Equals(value) != true)) {
                    this.instanceField = value;
                    this.RaisePropertyChanged("instance");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricVerificationFlags", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    public enum BiometricVerificationFlags : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncludeDSSInfo = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricVerificationParameters", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    [System.SerializableAttribute()]
    public partial class BiometricVerificationParameters : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentPassword {
            get {
                return this.documentPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.documentPasswordField, value) != true)) {
                    this.documentPasswordField = value;
                    this.RaisePropertyChanged("documentPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricSignatureVerification", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    [System.SerializableAttribute()]
    public partial class BiometricSignatureVerification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureVerification dssResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationResult resultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureReference[] signaturesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureVerification dssResult {
            get {
                return this.dssResultField;
            }
            set {
                if ((object.ReferenceEquals(this.dssResultField, value) != true)) {
                    this.dssResultField = value;
                    this.RaisePropertyChanged("dssResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationResult result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureReference[] signatures {
            get {
                return this.signaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.signaturesField, value) != true)) {
                    this.signaturesField = value;
                    this.RaisePropertyChanged("signatures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureVerification", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    [System.SerializableAttribute()]
    public partial class SignatureVerification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.VerificationResult resultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureReference[] signaturesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.VerificationResult result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureReference[] signatures {
            get {
                return this.signaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.signaturesField, value) != true)) {
                    this.signaturesField = value;
                    this.RaisePropertyChanged("signatures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricVerificationResult", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    public enum BiometricVerificationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignatureFound = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignatureNotFound = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricSignatureReference", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    [System.SerializableAttribute()]
    public partial class BiometricSignatureReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double scoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signatureAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationStatus signatureStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType signatureTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signatureUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime signingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.TimestampReference timestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signatureAccount {
            get {
                return this.signatureAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.signatureAccountField, value) != true)) {
                    this.signatureAccountField = value;
                    this.RaisePropertyChanged("signatureAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signatureID {
            get {
                return this.signatureIDField;
            }
            set {
                if ((object.ReferenceEquals(this.signatureIDField, value) != true)) {
                    this.signatureIDField = value;
                    this.RaisePropertyChanged("signatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile {
            get {
                return this.signatureProfileField;
            }
            set {
                if ((this.signatureProfileField.Equals(value) != true)) {
                    this.signatureProfileField = value;
                    this.RaisePropertyChanged("signatureProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationStatus signatureStatus {
            get {
                return this.signatureStatusField;
            }
            set {
                if ((this.signatureStatusField.Equals(value) != true)) {
                    this.signatureStatusField = value;
                    this.RaisePropertyChanged("signatureStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType signatureType {
            get {
                return this.signatureTypeField;
            }
            set {
                if ((this.signatureTypeField.Equals(value) != true)) {
                    this.signatureTypeField = value;
                    this.RaisePropertyChanged("signatureType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signatureUserName {
            get {
                return this.signatureUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.signatureUserNameField, value) != true)) {
                    this.signatureUserNameField = value;
                    this.RaisePropertyChanged("signatureUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime signingTime {
            get {
                return this.signingTimeField;
            }
            set {
                if ((this.signingTimeField.Equals(value) != true)) {
                    this.signingTimeField = value;
                    this.RaisePropertyChanged("signingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.TimestampReference timestamp {
            get {
                return this.timestampField;
            }
            set {
                if ((object.ReferenceEquals(this.timestampField, value) != true)) {
                    this.timestampField = value;
                    this.RaisePropertyChanged("timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                if ((object.ReferenceEquals(this.versionField, value) != true)) {
                    this.versionField = value;
                    this.RaisePropertyChanged("version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerificationResult", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    public enum VerificationResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncompleteValidation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureReference", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    [System.SerializableAttribute()]
    public partial class SignatureReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureReference[] counterSignaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.HashAlgorithm hashAlgorithmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] signatureCertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags signatureFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signatureIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.VerificationStatus signatureStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureType signatureTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime signingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.TimestampReference[] timestampsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.TimestampReference[] validationTimestampsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureReference[] counterSignatures {
            get {
                return this.counterSignaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.counterSignaturesField, value) != true)) {
                    this.counterSignaturesField = value;
                    this.RaisePropertyChanged("counterSignatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.HashAlgorithm hashAlgorithm {
            get {
                return this.hashAlgorithmField;
            }
            set {
                if ((this.hashAlgorithmField.Equals(value) != true)) {
                    this.hashAlgorithmField = value;
                    this.RaisePropertyChanged("hashAlgorithm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] signatureCertificate {
            get {
                return this.signatureCertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.signatureCertificateField, value) != true)) {
                    this.signatureCertificateField = value;
                    this.RaisePropertyChanged("signatureCertificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags signatureFlags {
            get {
                return this.signatureFlagsField;
            }
            set {
                if ((this.signatureFlagsField.Equals(value) != true)) {
                    this.signatureFlagsField = value;
                    this.RaisePropertyChanged("signatureFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signatureID {
            get {
                return this.signatureIDField;
            }
            set {
                if ((object.ReferenceEquals(this.signatureIDField, value) != true)) {
                    this.signatureIDField = value;
                    this.RaisePropertyChanged("signatureID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile {
            get {
                return this.signatureProfileField;
            }
            set {
                if ((this.signatureProfileField.Equals(value) != true)) {
                    this.signatureProfileField = value;
                    this.RaisePropertyChanged("signatureProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.VerificationStatus signatureStatus {
            get {
                return this.signatureStatusField;
            }
            set {
                if ((this.signatureStatusField.Equals(value) != true)) {
                    this.signatureStatusField = value;
                    this.RaisePropertyChanged("signatureStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureType signatureType {
            get {
                return this.signatureTypeField;
            }
            set {
                if ((this.signatureTypeField.Equals(value) != true)) {
                    this.signatureTypeField = value;
                    this.RaisePropertyChanged("signatureType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime signingTime {
            get {
                return this.signingTimeField;
            }
            set {
                if ((this.signingTimeField.Equals(value) != true)) {
                    this.signingTimeField = value;
                    this.RaisePropertyChanged("signingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.TimestampReference[] timestamps {
            get {
                return this.timestampsField;
            }
            set {
                if ((object.ReferenceEquals(this.timestampsField, value) != true)) {
                    this.timestampsField = value;
                    this.RaisePropertyChanged("timestamps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.TimestampReference[] validationTimestamps {
            get {
                return this.validationTimestampsField;
            }
            set {
                if ((object.ReferenceEquals(this.validationTimestampsField, value) != true)) {
                    this.validationTimestampsField = value;
                    this.RaisePropertyChanged("validationTimestamps");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HashAlgorithm", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    public enum HashAlgorithm : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RIPEMD160 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MD5 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHA1 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHA256 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHA384 = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHA512 = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSL3 = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VerificationStatus", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    public enum VerificationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Valid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignatureCorrupted = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignerNotFound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IncompleteChain = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BadCountersignature = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BadTimestamp = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertificateExpired = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertificateRevoked = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertificateCorrupted = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UntrustedCA = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RevInfoNotFound = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimestampInfoNotFound = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertificateMalformed = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidPolicy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotValidForUsage = 16,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureType", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    public enum SignatureType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enveloped = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enveloping = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Detached = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DetachedInternal = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimestampReference", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    [System.SerializableAttribute()]
    public partial class TimestampReference : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureReference[] timestampSignaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool timestampSuitableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timestampTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.TimestampType timestampTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureReference[] timestampSignatures {
            get {
                return this.timestampSignaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.timestampSignaturesField, value) != true)) {
                    this.timestampSignaturesField = value;
                    this.RaisePropertyChanged("timestampSignatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool timestampSuitable {
            get {
                return this.timestampSuitableField;
            }
            set {
                if ((this.timestampSuitableField.Equals(value) != true)) {
                    this.timestampSuitableField = value;
                    this.RaisePropertyChanged("timestampSuitable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timestampTime {
            get {
                return this.timestampTimeField;
            }
            set {
                if ((this.timestampTimeField.Equals(value) != true)) {
                    this.timestampTimeField = value;
                    this.RaisePropertyChanged("timestampTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.TimestampType timestampType {
            get {
                return this.timestampTypeField;
            }
            set {
                if ((this.timestampTypeField.Equals(value) != true)) {
                    this.timestampTypeField = value;
                    this.RaisePropertyChanged("timestampType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimestampType", Namespace="http://schemas.datacontract.org/2004/07/SealSignDSSTypes")]
    public enum TimestampType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Generic = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESC = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CertsAndCRLs = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Archive = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Archive2 = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BiometricVerificationStatus", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSTypes")]
    public enum BiometricVerificationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Match = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoMatch = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SignatureCorrupted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfflineBiometricSignature", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
    [System.SerializableAttribute()]
    public partial class OfflineBiometricSignature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureFlags biometricOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureParameters biometricParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid instanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] offlineBiometricStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags optionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SealSignBSSClientTest.BiometrisSignatureService.SignatureParameters parametersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string account {
            get {
                return this.accountField;
            }
            set {
                if ((object.ReferenceEquals(this.accountField, value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureFlags biometricOptions {
            get {
                return this.biometricOptionsField;
            }
            set {
                if ((this.biometricOptionsField.Equals(value) != true)) {
                    this.biometricOptionsField = value;
                    this.RaisePropertyChanged("biometricOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureParameters biometricParameters {
            get {
                return this.biometricParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.biometricParametersField, value) != true)) {
                    this.biometricParametersField = value;
                    this.RaisePropertyChanged("biometricParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType {
            get {
                return this.biometricSignatureTypeField;
            }
            set {
                if ((this.biometricSignatureTypeField.Equals(value) != true)) {
                    this.biometricSignatureTypeField = value;
                    this.RaisePropertyChanged("biometricSignatureType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid instance {
            get {
                return this.instanceField;
            }
            set {
                if ((this.instanceField.Equals(value) != true)) {
                    this.instanceField = value;
                    this.RaisePropertyChanged("instance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] offlineBiometricState {
            get {
                return this.offlineBiometricStateField;
            }
            set {
                if ((object.ReferenceEquals(this.offlineBiometricStateField, value) != true)) {
                    this.offlineBiometricStateField = value;
                    this.RaisePropertyChanged("offlineBiometricState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags options {
            get {
                return this.optionsField;
            }
            set {
                if ((this.optionsField.Equals(value) != true)) {
                    this.optionsField = value;
                    this.RaisePropertyChanged("options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SealSignBSSClientTest.BiometrisSignatureService.SignatureParameters parameters {
            get {
                return this.parametersField;
            }
            set {
                if ((object.ReferenceEquals(this.parametersField, value) != true)) {
                    this.parametersField = value;
                    this.RaisePropertyChanged("parameters");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfflineBiometricSignatureProvider", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
    [System.SerializableAttribute()]
    public partial class OfflineBiometricSignatureProvider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid instanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] offlineBiometricStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string providerParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string uriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string account {
            get {
                return this.accountField;
            }
            set {
                if ((object.ReferenceEquals(this.accountField, value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid instance {
            get {
                return this.instanceField;
            }
            set {
                if ((this.instanceField.Equals(value) != true)) {
                    this.instanceField = value;
                    this.RaisePropertyChanged("instance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] offlineBiometricState {
            get {
                return this.offlineBiometricStateField;
            }
            set {
                if ((object.ReferenceEquals(this.offlineBiometricStateField, value) != true)) {
                    this.offlineBiometricStateField = value;
                    this.RaisePropertyChanged("offlineBiometricState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string providerParameter {
            get {
                return this.providerParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.providerParameterField, value) != true)) {
                    this.providerParameterField = value;
                    this.RaisePropertyChanged("providerParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string uri {
            get {
                return this.uriField;
            }
            set {
                if ((object.ReferenceEquals(this.uriField, value) != true)) {
                    this.uriField = value;
                    this.RaisePropertyChanged("uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BiometrisSignatureService.IBiometricSignatureServiceBasic")]
    public interface IBiometricSignatureServiceBasic {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/HeartBeat", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/HeartBeatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/HeartBeatSealSignDSSFaultContr" +
            "actFault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        void HeartBeat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/HeartBeat", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/HeartBeatResponse")]
        System.Threading.Tasks.Task HeartBeatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignature", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignatureSealSignDSSFault" +
            "ContractFault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic BeginSignature(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureParameters biometricParameters, SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags options, SealSignBSSClientTest.BiometrisSignatureService.SignatureParameters parameters, byte[] detachedSignature, byte[] signingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignature", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignatureResponse")]
        System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic> BeginSignatureAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureParameters biometricParameters, SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags options, SealSignBSSClientTest.BiometrisSignatureService.SignatureParameters parameters, byte[] detachedSignature, byte[] signingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignatureProvider", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignatureProviderResponse" +
            "")]
        SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic BeginSignatureProvider(string id, string account, string uri, string providerParameter, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignatureProvider", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/BeginSignatureProviderResponse" +
            "")]
        System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic> BeginSignatureProviderAsync(string id, string account, string uri, string providerParameter, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignature", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignatureSealSignDSSFaultCo" +
            "ntractFault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        byte[] EndSignature(System.Guid instance, byte[] biometricState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignature", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignatureResponse")]
        System.Threading.Tasks.Task<byte[]> EndSignatureAsync(System.Guid instance, byte[] biometricState);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignatureProvider", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignatureProviderResponse")]
        byte[] EndSignatureProvider(System.Guid instance, byte[] biometricState, string uri, string providerParameter, bool returnSignedDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignatureProvider", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/EndSignatureProviderResponse")]
        System.Threading.Tasks.Task<byte[]> EndSignatureProviderAsync(System.Guid instance, byte[] biometricState, string uri, string providerParameter, bool returnSignedDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/Verify", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/VerifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/VerifySealSignDSSFaultContract" +
            "Fault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification Verify(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationParameters biometricParameters, byte[] biometricState, byte[] detachedSignature, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/Verify", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/VerifyResponse")]
        System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification> VerifyAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationParameters biometricParameters, byte[] biometricState, byte[] detachedSignature, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoFromBiometricState", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoFromBiometricStateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoFromBiometricStateSealS" +
            "ignDSSFaultContractFault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification GetInfoFromBiometricState(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, System.Guid instance, byte[] biometricState, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoFromBiometricState", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoFromBiometricStateRespo" +
            "nse")]
        System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification> GetInfoFromBiometricStateAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, System.Guid instance, byte[] biometricState, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfo", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoSealSignDSSFaultContrac" +
            "tFault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification GetInfo(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfo", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/GetInfoResponse")]
        System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification> GetInfoAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, byte[] document);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignatures", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesSealSignD" +
            "SSFaultContractFault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        byte[] SyncOfflineSignatures(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignature[] offlineSignatures, byte[] detachedSignature, byte[] signingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignatures", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesResponse")]
        System.Threading.Tasks.Task<byte[]> SyncOfflineSignaturesAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignature[] offlineSignatures, byte[] detachedSignature, byte[] signingDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesProvider", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesProviderR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SealSignBSSClientTest.BiometrisSignatureService.SealSignDSSFaultContract), Action="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesProviderS" +
            "ealSignDSSFaultContractFault", Name="SealSignDSSFaultContract", Namespace="http://schemas.datacontract.org/2004/07/SealSignBSSService")]
        byte[] SyncOfflineSignaturesProvider(SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignatureProvider[] offlineSignatures, byte[] signingDocument, bool returnSignedDocument);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesProvider", ReplyAction="http://tempuri.org/IBiometricSignatureServiceBasic/SyncOfflineSignaturesProviderR" +
            "esponse")]
        System.Threading.Tasks.Task<byte[]> SyncOfflineSignaturesProviderAsync(SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignatureProvider[] offlineSignatures, byte[] signingDocument, bool returnSignedDocument);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBiometricSignatureServiceBasicChannel : SealSignBSSClientTest.BiometrisSignatureService.IBiometricSignatureServiceBasic, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BiometricSignatureServiceBasicClient : System.ServiceModel.ClientBase<SealSignBSSClientTest.BiometrisSignatureService.IBiometricSignatureServiceBasic>, SealSignBSSClientTest.BiometrisSignatureService.IBiometricSignatureServiceBasic {
        
        public BiometricSignatureServiceBasicClient() {
        }
        
        public BiometricSignatureServiceBasicClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BiometricSignatureServiceBasicClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BiometricSignatureServiceBasicClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BiometricSignatureServiceBasicClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void HeartBeat() {
            base.Channel.HeartBeat();
        }
        
        public System.Threading.Tasks.Task HeartBeatAsync() {
            return base.Channel.HeartBeatAsync();
        }
        
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic BeginSignature(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureParameters biometricParameters, SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags options, SealSignBSSClientTest.BiometrisSignatureService.SignatureParameters parameters, byte[] detachedSignature, byte[] signingDocument) {
            return base.Channel.BeginSignature(signatureProfile, biometricSignatureType, id, account, biometricOptions, biometricParameters, options, parameters, detachedSignature, signingDocument);
        }
        
        public System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic> BeginSignatureAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureParameters biometricParameters, SealSignBSSClientTest.BiometrisSignatureService.SignatureFlags options, SealSignBSSClientTest.BiometrisSignatureService.SignatureParameters parameters, byte[] detachedSignature, byte[] signingDocument) {
            return base.Channel.BeginSignatureAsync(signatureProfile, biometricSignatureType, id, account, biometricOptions, biometricParameters, options, parameters, detachedSignature, signingDocument);
        }
        
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic BeginSignatureProvider(string id, string account, string uri, string providerParameter, byte[] document) {
            return base.Channel.BeginSignatureProvider(id, account, uri, providerParameter, document);
        }
        
        public System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureBeginResponseBasic> BeginSignatureProviderAsync(string id, string account, string uri, string providerParameter, byte[] document) {
            return base.Channel.BeginSignatureProviderAsync(id, account, uri, providerParameter, document);
        }
        
        public byte[] EndSignature(System.Guid instance, byte[] biometricState) {
            return base.Channel.EndSignature(instance, biometricState);
        }
        
        public System.Threading.Tasks.Task<byte[]> EndSignatureAsync(System.Guid instance, byte[] biometricState) {
            return base.Channel.EndSignatureAsync(instance, biometricState);
        }
        
        public byte[] EndSignatureProvider(System.Guid instance, byte[] biometricState, string uri, string providerParameter, bool returnSignedDocument) {
            return base.Channel.EndSignatureProvider(instance, biometricState, uri, providerParameter, returnSignedDocument);
        }
        
        public System.Threading.Tasks.Task<byte[]> EndSignatureProviderAsync(System.Guid instance, byte[] biometricState, string uri, string providerParameter, bool returnSignedDocument) {
            return base.Channel.EndSignatureProviderAsync(instance, biometricState, uri, providerParameter, returnSignedDocument);
        }
        
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification Verify(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationParameters biometricParameters, byte[] biometricState, byte[] detachedSignature, byte[] document) {
            return base.Channel.Verify(signatureProfile, biometricSignatureType, id, account, biometricOptions, biometricParameters, biometricState, detachedSignature, document);
        }
        
        public System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification> VerifyAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureType biometricSignatureType, string id, string account, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationFlags biometricOptions, SealSignBSSClientTest.BiometrisSignatureService.BiometricVerificationParameters biometricParameters, byte[] biometricState, byte[] detachedSignature, byte[] document) {
            return base.Channel.VerifyAsync(signatureProfile, biometricSignatureType, id, account, biometricOptions, biometricParameters, biometricState, detachedSignature, document);
        }
        
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification GetInfoFromBiometricState(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, System.Guid instance, byte[] biometricState, byte[] document) {
            return base.Channel.GetInfoFromBiometricState(signatureProfile, instance, biometricState, document);
        }
        
        public System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification> GetInfoFromBiometricStateAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, System.Guid instance, byte[] biometricState, byte[] document) {
            return base.Channel.GetInfoFromBiometricStateAsync(signatureProfile, instance, biometricState, document);
        }
        
        public SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification GetInfo(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, byte[] document) {
            return base.Channel.GetInfo(signatureProfile, document);
        }
        
        public System.Threading.Tasks.Task<SealSignBSSClientTest.BiometrisSignatureService.BiometricSignatureVerification> GetInfoAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, byte[] document) {
            return base.Channel.GetInfoAsync(signatureProfile, document);
        }
        
        public byte[] SyncOfflineSignatures(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignature[] offlineSignatures, byte[] detachedSignature, byte[] signingDocument) {
            return base.Channel.SyncOfflineSignatures(signatureProfile, offlineSignatures, detachedSignature, signingDocument);
        }
        
        public System.Threading.Tasks.Task<byte[]> SyncOfflineSignaturesAsync(SealSignBSSClientTest.BiometrisSignatureService.SignatureProfile signatureProfile, SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignature[] offlineSignatures, byte[] detachedSignature, byte[] signingDocument) {
            return base.Channel.SyncOfflineSignaturesAsync(signatureProfile, offlineSignatures, detachedSignature, signingDocument);
        }
        
        public byte[] SyncOfflineSignaturesProvider(SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignatureProvider[] offlineSignatures, byte[] signingDocument, bool returnSignedDocument) {
            return base.Channel.SyncOfflineSignaturesProvider(offlineSignatures, signingDocument, returnSignedDocument);
        }
        
        public System.Threading.Tasks.Task<byte[]> SyncOfflineSignaturesProviderAsync(SealSignBSSClientTest.BiometrisSignatureService.OfflineBiometricSignatureProvider[] offlineSignatures, byte[] signingDocument, bool returnSignedDocument) {
            return base.Channel.SyncOfflineSignaturesProviderAsync(offlineSignatures, signingDocument, returnSignedDocument);
        }
    }
}
